syntax = "proto3";

option go_package = "github.com/beam-cloud/goproc/proto";

package goproc;

service GoProc {
  // Cache RPCs
  rpc GetContent(GetContentRequest) returns (GetContentResponse) {}
  rpc HasContent(HasContentRequest) returns (HasContentResponse) {}
  rpc GetContentStream(GetContentRequest) returns (stream GetContentResponse) {}
  rpc StoreContent(stream StoreContentRequest) returns (StoreContentResponse) {}
  rpc StoreContentFromSource(StoreContentFromSourceRequest)
      returns (StoreContentFromSourceResponse) {}
  rpc StoreContentFromSourceWithLock(StoreContentFromSourceRequest)
      returns (StoreContentFromSourceWithLockResponse) {}
  rpc GetState(GetStateRequest) returns (GetStateResponse) {}
}

message GetContentRequest {
  string hash = 1;  // Hash of the content to retrieve
  int64 offset = 2; // Offset into the content
  int64 length = 3; // Length of the content to retrieve
}

message GetContentResponse {
  bool ok = 1;
  bytes content = 2; // Content data
}

message HasContentRequest {
  string hash = 1; // Hash of the content to check
}

message HasContentResponse {
  bool ok = 1;
  bool exists = 2;
}

message StoreContentRequest { bytes content = 1; }

message StoreContentResponse {
  bool ok = 1;
  string hash = 2; // Hash of the stored content
}

message StoreContentFromSourceWithLockResponse {
  string hash = 1; // Hash of the stored content
  bool ok = 2;
  bool failed_to_acquire_lock = 3;
  string error_msg = 4;
}

message GetStateRequest {}

message GetStateResponse {
  bool ok = 1;
  string version = 2;
  float capacity_usage_pct = 3;
  string private_ip_addr = 4;
}

message CacheSource {
  string path = 1;
  string bucket_name = 2;
  string region = 3;
  string endpoint_url = 4;
  string access_key = 5;
  string secret_key = 6;
}

message StoreContentFromSourceRequest { CacheSource source = 1; }

message StoreContentFromSourceResponse {
  bool ok = 1;
  string hash = 2;
  string error_msg = 3;
}

message GetAvailableHostsRequest { string locality = 1; }

message GetAvailableHostsResponse { bool ok = 1; }
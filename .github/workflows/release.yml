name: Release

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build-and-upload:
    name: Build and upload binaries
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - goos: linux
            goarch: amd64
            suffix: linux-amd64
          - goos: linux
            goarch: arm64
            suffix: linux-arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.10'

      - name: Extract version from tag
        id: vars
        run: |
          TAG="${GITHUB_REF##*/}"
          # strip a leading 'v' if present for filename friendliness
          CLEAN_TAG=${TAG#v}
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          echo "clean_tag=${CLEAN_TAG}" >> $GITHUB_OUTPUT

      - name: Build binary (${{ matrix.suffix }})
        env:
          CGO_ENABLED: 0
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p dist
          go build -o "dist/goproc-${{ steps.vars.outputs.clean_tag }}-${{ matrix.suffix }}" ./cmd/main.go

      - name: Upload asset to release (${{ matrix.suffix }})
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/goproc-${{ steps.vars.outputs.clean_tag }}-${{ matrix.suffix }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


